#+TITLE: 외학도팀 중간발표2 발표내용
#+STARTUP: indent
#+OPTIONS: toc:nil

* 유저 인터페이스 설명 (정의형)
** 공책에 그린 페이지 설명들 보여주기
*** 긁어서 붙이는 페이지
*** 도표요약
*** 목표 과목과 학점
** 페이지에서 사용된 프론트엔드 라이브러리나 기술 설명
* 소개한 페이지에 대한 기술적인 요소 설명(유해민)
** Course Crawler 프로젝트 소개
*** 파트별 설명
**** Course 모델링
***** 내부 클래스 모델링
***** JSON 연동
**** 크롤링
*** 사용할 프로젝트에서 모델링이 필요함
**** Artifactory 셋업
**** 빌드 툴에 적용
*** 만든 JSON 시연
** DB 소개
*** 백엔드의 핵심!
*** 어떤 드라이버를 사용할지 결정
**** Slick
*** DB 모델을 만들자!
* 이름
** 투표요청
- 김훕스 / hufskim.com
- 잠이오니 / jamioni.com
** 기타 고려했었던 이름들
- Hufs ahead
- HufsMyMap
- HufScheduler
- 소화전
- 비상구
- haakjum
- hakjum.guide
- Robin Hufs
- humpass
- hufs-planner
#+BEGIN_EXAMPLE
그러면 지금부터 백엔드 진행상황을 말씀드리겠습니다.

지금 수월하게 잘 진행되고 있는 프론트엔드와 비교해서 지금 약간 답답한 상황입니다. 그 이유 중 하나는 제가 저번주 목요일까지 중간고사를 보는 바람에 시간이 없었기 때문입니다. 물론 변명입니다.

백엔드는 프론트엔드처럼 따로 다 만들고 합칠 수 있는 것이 아닙니다. 모든 요소들이 타이트하게 묶여있는 Play Framework에서 가장 밑바탕이 되는 모델을 우선 설계하지 않으면 컨트롤러와 뷰는 무의미합니다. 그래서 저는 처음부터 지금까지 저희 프로젝트의 가장 기본 모델인 Course에 대한 모델링을 진행하고 있었습니다. 바로 저번에 말씀드린 Course Crawler 프로젝트입니다.

이 프로젝트는 이제 사용 가능한 시점에 도달했습니다. 아직 설계상 미완인 부분이 많지만, 학교의 Course를 모델링한다는 목표와 강의계획서 사이트에서 Course를 크롤링해서 사용하기 쉬운 JSON 형식으로 바꾸는 데에는 성공했습니다. 앞으로 시간이 나면 두 기능을 서로 다른 프로젝트로 분리할 생각입니다.

이제 만들어진 JSON파일을 소비하는 서버를 만들어야 하는데, 이 JSON을 읽어올 라이브러리는 제가 만든 다른 프로젝트밖에 없습니다. 이 모델링을 어떠한 방식으로 다른 프로그램에 도입해야 합니다. 어떤 방법이 있을까요?

첫번째로는 Course의 모델링 소스파일을 복사해 새로운 프로젝트에 가져오는 방법을 생각할 수 있습니다. 쉽게 볼 수 있듯이 많은 측면에서 매우 안좋은 선택입니다.

두번째는 첫번째 프로젝트의 JAR파일을 만들어 두번째 프로젝트에 넣는 것입니다. 첫번째 방법보다는 낫지만, 원본이 바뀔 때마다 수동으로 JAR 파일을 업데이트해야 하는 번거로움이 있습니다.

세번째는 온라인 리포지토리를 활용하는 것입니다. 하지만 Maven같은 큰 리포지토리는 아무 프로그램이나 다 받아주지 않습니다. 그래서 저는 제가 따로 리포지토리를 만들기로 했습니다.

제가 개인적으로 사용하고 있는 서버에 Artifactory라는 프로그램을 설치해서, 제 파일을 업로드하고, 이제 서버 프로그램에서는 별다른 조치를 하지 않고 제 라이브러리를 Dependency로 명시하는 것만으로 제가 모델링한 Course를 사용할 수 있게 되었습니다.

이제 이게 해결되었으니, 서버를 만들 차례입니다.

하지만 스칼라와 프레임워크로 다이브하기 이전에, DB의 관계형 모델을 설계해야 합니다.
저희 프로그램의 가장 큰 플레이어는 세 가지입니다. 첫번째는 사용자, 두 번째는 과(개설영역), 그리고 세 번째는 강의입니다. 이 셋의 관계를 잘 정리한 데이터베이스가 있어야 그 데이터베이스를 활용한 앱을 만들 수가 있습니다. 

사실 저는 여기서 애를 많이 먹었는데, DB에 대해 전혀 무지한 상태이기 때문입니다. DB만 해도 다들 아시다시피 방대한 주제인데, 저는 프로그래밍 언어 만큼 데이터베이스에 대해 많이 공부를 하지 않았습니다. 인터넷을 뒤져서 제가 만들어야 하는 것이 ERD라는 것을 깨닫고, 공책에 그림을 그리기 시작했습니다.

그러다가 MySQL Workbench라는 프로그램에 대해서 알게 되고, 활용하기 시작했습니다.

지금까지 완성된 Diagram은 다음과 같습니다. 아직은 Diagram과 SQL밖에 완성이 되지 않았기 때문에, 이제 이 Table을 제가 아까 말씀드린 Course의 클래스와 연동하는 코드, 그리고 User와 Major에 대한 스칼라 모델링을 만들 차례입니다.

이 관계를 스칼라로 적어서 DB와 연동하고, 수행할 모든 operation을 정의하면 데이터베이스의 모델링은 끝이 납니다. Model 파트가 완성된 이후로 저는 컨트롤러와 뷰에 집중할 생각입니다.

백엔드 파트는 이상입니다.
#+END_EXAMPLE
